<?php 

	namespace  App\Entity\Repo;

	use App\Entity\BHJournal;
	use App\Entity\Rechnung;
	use App\Entity\RechnungPosten;
	use Doctrine\ORM\EntityRepository;
	use Doctrine\ORM\EntityManagerInterface;

	use Doctrine\ORM\Mapping\ClassMetadata;

	/**
	 * RechnungRepo
	 * Repository Class automatically generated by Poiz Doctrine Mediator.
	 * You may add additional Methods to your Repository as well...
	 **/
	class RechnungRepo extends EntityRepository { 


		/**
		 * @var EntityManagerInterface
		 */
		protected $eMan;
		
		/**
		 * @var array
		 */
		protected $billPosts      = [];
		
		/**
		 * @var array
		 */
		protected $billBHJournals = [];



		public function __construct(EntityManagerInterface $em, ClassMetadata $class){
			parent::__construct($em, $class); 
			$this->eMan			= $em; 

		}


		public function findUnique($config=[], $ordering=[]){
			//todo
		}
		
		public function fetchSingleInvoiceByID($billID, $asArray=true){
			/**@var Rechnung $invoiceData */
			/**@var Rechnung $tmpInvoiceData */
			$rayResult  = [];
			$invoiceData = $this->eMan->getRepository(Rechnung::class)->find($billID);
			
			if($invoiceData){
				$tmpInvoiceData = $this->setProps($invoiceData, $asArray);
				$rayResult      = $asArray ? $tmpInvoiceData->getEntityBank() : $tmpInvoiceData;
			}
			return $rayResult;
		}
		
		
		protected function setProps(Rechnung $invoiceData, $asArray=true){
			$this->bindRelationalData($invoiceData, $asArray);
			$invoiceData->setBillPosts($this->billPosts);
			$invoiceData->setBillBHJournals($this->billBHJournals);
			
			return $invoiceData;
		}
		
		protected function bindRelationalData(Rechnung $invoiceData = null, $asArray=true) {
			$this->getAssociatedBillPostsAndBHJournalData($invoiceData, $asArray);
			
			return $this;
		}
		
		protected function getAssociatedBillPostsAndBHJournalData(Rechnung $invoiceData, $asArray){
			/**@var RechnungPosten  $objBillPost*/
			/**@var BHJournal       $bhjObject*/
			$rayBHJData   = [];
			$billPosts    = []; // Rechnung_posten_BH_Journal_id
			$rayBillPosts = $this->eMan->getRepository(RechnungPosten::class)->
											findBy(["Rechnung_posten_Rechnung_id" => $invoiceData->getRechnungId()]);
			
			if($rayBillPosts){
				# FETCH ALL THE BH_JOURNAL DATA BY LOOPING THROUGH THE `$rayBillPosts`
				foreach ($rayBillPosts as $objBillPost){
					$billPosts[]  = $asArray ? $objBillPost->getEntityBank() : $objBillPost;
					$bhjObject    = $this->eMan->getRepository(BHJournal::class)->find($objBillPost->getRechnungPostenBHJournalId());
					$rayBHJData[] = $asArray ? $bhjObject->getEntityBank() : $bhjObject;
				}
				$this->billPosts      = $billPosts;
				$this->billBHJournals = $rayBHJData;
			}
			return [
				'bhjData'     => $billPosts,
				'billPosts'   => $rayBHJData
			];
		}
		
		protected function getAssociatedBillBHJournals(Rechnung $personData, $asArray){
			$personGender     = [];
			$personGenderObj  = $this->eMan->getRepository(Geschlecht::class)->find($personData->getGeschlecht());
			
			if($personGenderObj){
				$personGender  = $asArray ? $personGenderObj->getEntityBank() : $personGenderObj;
			}
			return $personGender;
		}
		
		
	}
